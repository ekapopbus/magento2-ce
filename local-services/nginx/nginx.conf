
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Magento 2 local site
    server {
        listen 80;
        server_name magento2-ce.local;

    # use container path to the project so nginx passes a SCRIPT_FILENAME
    # that is valid inside the PHP-FPM container. The PHP-FPM service mounts
    # the project at /var/www/html.
        set $MAGE_ROOT /var/www/html;
        root $MAGE_ROOT/pub;

        index index.php;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ [^/].php(/|$) {
            fastcgi_pass php-fpm-magento:9000; # target actual php-fpm container
            # Buffers tuned for Magento which can send large response headers
            fastcgi_buffer_size 64k;
            fastcgi_buffers 32 64k;
            fastcgi_busy_buffers_size 128k;
            fastcgi_temp_file_write_size 256k;
            fastcgi_index index.php;
            include fastcgi_params;
            # ensure PHP uses a container-local writable session directory
            fastcgi_param PHP_VALUE "session.save_path=/tmp/magento_sessions";
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param MAGE_RUN_TYPE website;
            fastcgi_param MAGE_RUN_CODE base;
        }

        # Serve static files with fallback to Magento's static.php which maps
        # versioned URLs (e.g. /static/version1234/...) to the actual pub/static
        # files that Magento deploys. Without this fallback nginx will 404 when
        # versioned directories are not present on disk.
        # Strip Magento's deployed version prefix from requests like
        # /static/version12345/frontend/... and forward the underlying resource
        # path to static.php which will serve the actual file.
        location ~ ^/static/(version\d+/)?(.*)$ {
            expires max;
            add_header Cache-Control "public";
            # $2 is the path after optional version prefix; prefix with / when
            # passing to static.php because that script expects paths like
            # /frontend/...
            try_files $uri $uri/ /static.php?resource=/$2;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires max;
            add_header Cache-Control "public";
        }

        access_log /var/log/nginx/magento_access.log;
        error_log /var/log/nginx/magento_error.log warn;
    }
}
